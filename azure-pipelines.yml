# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - azure-pipelines.yml

jobs:

  - job: Android

    pool:
      name: Unity macOS Agents

    variables:
      buildConfiguration: 'Release'

    steps:

    - task: UnityBuildTask@3
      inputs:
        buildTarget: 'Android'
        outputPath: '$(Build.BinariesDirectory)'
        outputFileName: 'drop'

    - task: AndroidSigning@3
      displayName: 'Signing and aligning APK file(s) $(Build.BinariesDirectory)/*.apk'
      inputs:
        apkFiles: '$(Build.BinariesDirectory)/*.apk'
        apksignerKeystoreFile: '9e0392c3-92c0-42db-9201-79c730159c78'
        apksignerKeystorePassword: d0bqZ971
        apksignerKeystoreAlias: 'my_key_alias'
        apksignerKeyPassword: yT93zfT

    - task: CopyFiles@2
      displayName: 'Copy APK Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(Build.BinariesDirectory)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      displayName: 'Copy RELEASE notes to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: 'RELEASE'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'Apk&ReleaseNotes'
        publishLocation: 'Container'